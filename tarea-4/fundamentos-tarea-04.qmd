---
title: "Tarea-04"
format:
  html:
    self-contained: true
editor: visual
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
```

Cargamos los paquetes que necesitaremos:

```{r message=FALSE}
library(tidyverse)
library(nullabor)
library(patchwork)
```

## Pruebas visuales y Permutación

#### Pruebas de permutación

1.  La tabla de datos *Phillies2009* contiene información de la temporada de baseball 2009 para el equipo de Philadelphia *Phillies*, en este ejercicio queremos comparar los strikes (`StrikeOuts`) entre los juegos en casa y de visitante:

<!-- -->

a)  Realiza un *lineup* donde cada panel muestre un diagrama de caja y brazos para la variable de interés separando los juegos jugados en casa (home) y los juegos jugados fuera (away). ¿Puedes localizar los datos verdaderos entre los nulos?

```{r message=FALSE}
# Lectura de datos
phillies <- read_csv("Phillies2009.csv")
```

```{r}
names(phillies)
```

```{r}
head(phillies)
```

```{r}
ggplot(phillies, aes(x=Location, y=StrikeOuts)) + coord_flip() + geom_boxplot(outlier.shape=NA) + geom_jitter(alpha=0.45, aes(color=Location))
```
```{r}
set.seed(8)
reps <- lineup(null_permute("Location"), phillies, n=20)
```
```{r fig.width=12, fig.height=7}
reps_mezcla <- reps |>  
  mutate(Location_new = factor(digest::digest2int(Location) %% 177))
ggplot(reps_mezcla, aes(x=Location_new, y=StrikeOuts)) + coord_flip() + facet_wrap(~.sample, ncol = 5) + geom_boxplot(outlier.shape=NA, aes(colour=Location_new))
```

```{r}
decrypt("OfEt nSBS I9 o1wIBI19 JJ")
```

b)  Calcula el promedio de strikes por juego en cada grupo (donde grupo se define por Location).

```{r}
phillies |> group_by(Location) |> summarise(strikes_mean = mean(StrikeOuts))
```

c)  Realiza una prueba de permutación para la diferencia de las medias. Grafica la distribución de referencia y calcula el valor *p* de dos colas.

```{r}
dif_strikes <- phillies |> 
  group_by(Location) |>
  summarise(strikes_mean = mean(StrikeOuts))|>
  pivot_wider(names_from = Location, values_from = strikes_mean) |>
  mutate(diferencia_prop = Home - Away) |>
  pull(diferencia_prop)
dif_strikes
```
```{r}
reps <- lineup(null_permute("Location"), phillies, n=10000)
```

```{r}
reps_diff <- reps |>
  group_by(.sample, Location) |>
  summarise(strikes_mean = mean(StrikeOuts), .groups='drop') |>
  pivot_wider(names_from = Location, values_from = strikes_mean) |>
  mutate(diff_strikes = Home - Away)

reps_diff
```

```{r}
dist_perm <- ecdf(reps_diff$diff_strikes)
percentil_obs <- dist_perm(dif_strikes)
```

```{r}
g_1 <- ggplot(reps_diff, aes(sample = diff_strikes)) + geom_qq(distribution = stats::qunif)  +
  xlab("f") + ylab("diferencia") + labs(subtitle = "Distribución nula o de referencia") +
  geom_hline(yintercept = dif_strikes, colour = "red") +
  annotate("text", x = 0.3, y = dif_strikes - 0.05, label = "diferencia observada", colour = "red")

g_2 <- ggplot(reps_diff, aes(x = diff_strikes)) + geom_histogram(binwidth = 0.1) +
  coord_flip() + xlab("") + labs(subtitle = " ") + 
  geom_vline(xintercept = dif_strikes, colour = "red") +
  annotate("text", x = dif_strikes, y = 10000 * 0.1, label = percentil_obs,vjust = -0.2, colour = "red")

g_1 + g_2
```

```{r}
p_value <- 2*min(dist_perm(dif_strikes), 1-dist_perm(dif_strikes))

print(paste0("El p-value a dos colas es: ", p_value))
```

## Pruebas pareadas

En este ejemplo buscamos comparar la diferencia entre dos medicinas para dormir.

\- ID es el identificador de paciente, y medicina_1 y medicina_2 son las horas extras de sueño vs. no usar medicina.\

\- Examina los datos.

```{r}
dormir <- sleep %>% 
  pivot_wider(names_from = group, 
              names_prefix = "medicina_",
              values_from = extra)

dormir
```

La pregunta de interés es si una medicina es mejor que otra para prolongar el sueño. Nótese que en este caso, no tenemos grupos, sino mediciones repetidas.

**Pregunta 1:** Escribe la hipótesis nula.

*Hipótesis nula:* Ambas medicinas tienen el mismo efecto en prolongar las horas de sueño, es decir, no hay diferencia entre tomar una medicina u otra, las dos causan el mismo efecto. 

**Pregunta 2:** Nuestra estadística de interés es media de las diferencias entre las medicinas. Calcula la diferencia observada.

```{r}
diff_mean_test <- dormir |> 
  summarise(mean_med1 = mean(medicina_1), mean_med2 = mean(medicina_2)) |>
  mutate(diff_mean = abs(mean_med2 - mean_med1)) |>
  pull(diff_mean)

diff_mean_test
```

**Pregunta 3:** Hay variación entre los pacientes. ¿Tenemos evidencia para rechazar que son iguales? ¿Cómo hacemos nuestra distribución de referencia?

La distribución de referencia puede crearse a partir de la permutación de los tiempos adicionales de sueño entre medicinas. Asumiendo que queremos comparar si ambas medicinas tienen el mismo efecto o no, para contruir la distribución de referencia podemos asumir que no hay distinción entre etiqueta de medicina, por lo que al permutar cierta cantidad de veces las horas adicionales de sueño construiremos la distribución de referencia. 

**Pregunta 4:**  Haz una gráfica de la distribución de referencia y grafica encima el valor observado en los datos originales.


```{r}
calculate_diff_mean <- function(df){
  df |>
  summarise(mean_med1 = mean(medicina_1), mean_med2 = mean(medicina_2)) |>
  mutate(diff_mean = mean_med2 - mean_med1) |>
  pull(diff_mean)
}

swap <- function(vector){
  aux <- vector[2]
  vector[2] <- vector[3]
  vector[3] <- aux
  vector
}

permute_sleep_rows <- function(df){
  for (i in 1:nrow(df)){
    prob <- runif(1, 0, 1)
    if (prob >= 0.5){
      df[i, ] <- swap(df[i, ])
    }
  }
  df
}
```

```{r}
set.seed(8)
res <- NULL
for (i in 1:10000){
  sleep_permuted <- permute_sleep_rows(dormir)
  diff_mean <- sleep_permuted |> calculate_diff_mean()
  res <- append(res, diff_mean)
}
res_df <- data.frame(res)
names(res_df) <- c("diff_means")
head(res_df)
```

```{r}
dist_perm <- ecdf(res_df$diff_means)
percentil_obs <- dist_perm(diff_mean_test)
percentil_obs
```

```{r}
g_1 <- ggplot(res_df, aes(sample = diff_means)) + geom_qq(distribution = stats::qunif)  +
  xlab("f") + ylab("diferencia") + labs(subtitle = "Distribución nula o de referencia") +
  geom_hline(yintercept = diff_mean_test, colour = "red") +
  annotate("text", x = 0.3, y = diff_mean_test - 0.05, label = "diferencia observada", colour = "red")

g_2 <- ggplot(res_df, aes(x = diff_means)) + geom_histogram(binwidth = 0.1) +
  coord_flip() + xlab("") + labs(subtitle = " ") + 
  geom_vline(xintercept = diff_mean_test, colour = "red") +
  annotate("text", x = diff_mean_test, y = 10000 * 0.08, label = percentil_obs,vjust = -0.2, colour = "red")

g_1 + g_2
```

**Pregunta 5:** Calcula el valor p (justifica porque a una o dos colas).

```{r}
options("scipen"=100, "digits"=4)
p_value <- 2*min(dist_perm(diff_mean_test), 1-dist_perm(diff_mean_test)+0.0001)

print(paste0("El p-value a dos colas es: ", p_value))
```
Como consideramos las diferencias tanto positivas como negativas, y nuestra hipótesis nula es t1 = t2, para rechazar la hipótesis nula consideramos que t1 != t2 con cierto nivel de significancia (en este caso no definido), por lo tanto puede ser que t1 > t2 o que t1 < t2, entonces consideramos el **p value a dos colas**. En caso de haber definido la hipótesis nula como t1 < t2, hubieramos podido calcular únicamente el p value a una cola, sin embargo hubieramos tenido que considerar las diferencias con valor absoluto. 

## Valores-*p (opcional)*

Cuando usamos simulación para pruebas de permutación, el valor-*p* de una cola se puede calcular como

$$\hat{P}=(X+1)/(N+1)$$ donde $X$ es el número de estadísticas de prueba remuestreadas que son al menos tan extremas como la observada. Supongamos que el verdadero valor *p* (si pudiéramos hacer todas las permutaciones de manera exhaustiva) es $p$\

\- ¿Cuál es la varianza de $\hat{P}$?

$$Var(\hat{P}) = Var((X+1)/(N+1)) = 1/(N+1)^2 * Var(X+1) = 1/(N+1)^2 * Var(X)$$

\- ¿Cuál es la varianza de $\hat{P_2}$ para la prueba de dos lados? (suponiendo que $p$ no es cercano a $0.5$, donde $p$ es el verdadero valor *p* para la prueba de una cola).

$$Var(\hat{P_2}) = 1/(N+2)^2 * Var(X)$$
